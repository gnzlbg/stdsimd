language: rust
sudo: false
rust: nightly

matrix:
  fast_finish: true
  include:
    # Android
    - env: TARGET=x86_64-linux-android
      name: "x86_64-linux-android"
    - env: TARGET=arm-linux-androideabi
      name: "arm-linux-androideabi"
    - env: TARGET=aarch64-linux-android
      name: "aarch64-linux-android"
    # Linux
    - env: TARGET=i586-unknown-linux-gnu
      name: "i586-unknown-linux-gnu"
    - env: TARGET=i686-unknown-linux-gnu
      name: "i686-unknown-linux-gnu"
    - env: TARGET=x86_64-unknown-linux-gnu
      name: "x86_64-unknown-linux-gnu"
      install: true
    - env: TARGET=x86_64-unknown-linux-gnu-emulated STDSIMD_TEST_EVERYTHING=1
      name: "x86_64-unknown-linux-gnu-emulated"
      install: true
    - env: TARGET=arm-unknown-linux-gnueabihf
      name: "arm-unknown-linux-gnueabihf"
    - env: TARGET=armv7-unknown-linux-gnueabihf
      name: "armv7-unknown-linux-gnueabihf"
    - env: TARGET=aarch64-unknown-linux-gnu
      name: "aarch64-unknown-linux-gnu"
    - env: TARGET=mips-unknown-linux-gnu NORUN=1
      name: "mips-unknown-linux-gnu"
    - env: TARGET=mipsel-unknown-linux-gnu NORUN=1
      name: "mipsel-unknown-linux-gnu"
    - env: TARGET=mips64-unknown-linux-gnuabi64 NORUN=1
      name: "mips64-unknown-linux-gnuabi64"
    - env: TARGET=mips64el-unknown-linux-gnuabi64 NORUN=1
      name: "mips64el-unknown-linux-gnuabi64"
    - env: TARGET=powerpc-unknown-linux-gnu
      name: "powerpc-unknown-linux-gnu"
    - env: TARGET=powerpc64-unknown-linux-gnu
      name: "powerpc64-unknown-linux-gnu"
    - env: TARGET=powerpc64le-unknown-linux-gnu
      name: "powerpc64le-unknown-linux-gnu"
    - env: TARGET=s390x-unknown-linux-gnu NORUN=1
      name: "s390x-unknown-linux-gnu"
    # MacOS
    - env: TARGET=i686-apple-darwin
      name: "i686-apple-darwin"
      os: osx
      script: ci/run.sh
    - env: TARGET=x86_64-apple-darwin
      name: "x86_64-apple-darwin"
      os: osx
      script: ci/run.sh
      install: true
    # WebAssembly
    - env: TARGET=wasm32-unknown-unknown
      name: "wasm32-unknown-unknown"
    - name: "nvptx64-nvidia-cuda"
      env: TARGET=nvptx64-nvidia-cuda
      install: true
      script: ci/nvptx.sh
    - name: "nvptx-nvidia-cuda"
      env: TARGET=nvptx-nvidia-cuda
      install: true
      script: ci/nvptx.sh
    # Embedded
    - env: TARGET=thumbv6m-none-eabi NOSTD=1
      name: "thumbv6m-none-eabi"
    - env: TARGET=thumbv7m-none-eabi NOSTD=1
      name: "thumbv7m-none-eabi"
    - env: TARGET=thumbv7em-none-eabi NOSTD=1
      name: "thumbv7em-none-eabi"
    - env: TARGET=thumbv7em-none-eabihf NOSTD=1
      name: "thumbv7em-none-eabihf"
    # Tools:
    - name: "Documentation"
      install: true
      script: ci/dox.sh
    - name: "Verification: x86/x86_64"
      script: cargo test --manifest-path crates/stdsimd-verify/Cargo.toml
      install: true
    - name: "rustfmt"
      install: rustup component add rustfmt-preview
      script: cargo fmt --all -- --check
    - name: "clippy"
      install: rustup component add clippy-preview
      script: cargo clippy --all -- -D clippy::pedantic

install: travis_retry rustup target add $TARGET
before_script: cargo generate-lockfile
script:
  - |
    if [ "$NORUN" == "1" ]; then
      cargo build --target=$TARGET -p coresimd -p stdsimd --manifest-path crates/stdsimd/Cargo.toml
      cargo build --release --target=$TARGET -p coresimd -p stdsimd --manifest-path crates/stdsimd/Cargo.toml
    elif [ "$NOSTD" == "1" ]; then
      cargo build --target=$TARGET -p coresimd --manifest-path crates/stdsimd/Cargo.toml
    else
      ci/run-docker.sh $TARGET $FEATURES
    fi

notifications:
  email:
    on_success: never
env:
  global:
    secure: "jmh7FfVwtPYQN/xPrVYmX7ys70GvX9YsKYtDpp8UwtIihCr81KHi2P2a1/KZNvQN0gPO+nneKieCbNQSCEtxDG9plUoB+OhX8ov9g3ImTJbyt+oW35Vlqq9ftB+Hr/Wn42o4OSTYxRfy1gf9VMePBaJfdkuym3BB75K4s+k+akuVqJv+KAm3zz0wSqU4O/evj2EGz1ldMzqxpogrO2WJQkXyl4xaW/1E0y8IZfRy0bJPKALFUpTDp39ZiWvzjNdr8CXUW1DChJdFPNo7yswxyl/NL5e/meHqF2dzS5b0YyOhcCzlBm7eZoEwyHZWB73t7n5Tuo0uYpX/kBXPAvtDrljQjBNcpm9vJtg6sj3oG0bGAI8pJfNNpLdHLHO6CjmORGP/rzZLeRdEFVb8t7UIXG7l3NcoBpRNiwPFY4gpE5dgiRsKjNrtmNe3GahhsYwbPkc+QUeQFIDtYYRxdJVZj+KvU9jIEpRh5Zv8FZBfsfx0LcLEdtRBjJxFNGGO5NY8nP0OWNVyt4ckRbRMtVzcbcOdzcfUc74/wZYZj8SrfcbSqsfylMQbxLAHJCynvuFmoMf3udPqP3aPuO+4EjDYDIQ1kHwKK87lwqlXFHdhRepAmhRR//g3bDUxzXd96KJqbFU3MYZnn/jzIi0kl+jx3FxivT380cYLVjrD29aGc7M="
